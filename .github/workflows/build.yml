name: build

on:
  push:
    branches: [main]
  pull_request:
    branches: ['main**']
  release:
    types: [created]

env:
  BUILD_TYPE: Debug

jobs:
  maketest:
    runs-on: ubuntu-latest
    container:
      #image: quay.io/pypa/manylinux2014_x86_64:latest
      image: sameli/manylinux2014_x86_64_cuda_11
    steps:     
      - run: echo "PYDIR=/opt/python/cp310-cp310/bin" >> $GITHUB_ENV
      - name: install pkgs
        run: yum -y update && yum -y install git ninja-build fontconfig-devel tk-devel tcl-devel libXmu-devel mesa-libGLU-devel ccache python-devel lapack blas 
      - name: pip ngsolve
        run: |
             ${{ env.PYDIR }}/pip install -U pytest-check numpy wheel scikit-build mkl==2022.* mkl-devel==2022.* setuptools
             ${{ env.PYDIR }}/pip install ngsolve --pre
             echo "${{ env.PYDIR }}" >> $GITHUB_PATH
      - uses: actions/checkout@v3
        with:
          submodules: 'True'
          path: 'NGSTrefftz'
      - name: cmake NGSTrefftz
        run: cmake -DCMAKE_CXX_COMPILER=ngscxx -DNETGENDIR=${{ env.PYDIR }}/.. -DCMAKE_PREFIX_PATH=${{ env.PYDIR }}/..  -DPYTHON_EXECUTABLE=${{ env.PYDIR }}/python3 -DPYTHON_LIBRARY=${{ env.PYDIR }}/../lib -DPYTHON_INCLUDE_DIR=${{ env.PYDIR }}/../include -B $GITHUB_WORKSPACE/NGSTrefftz/make -S $GITHUB_WORKSPACE/NGSTrefftz/src/
      - name: compile NGSTrefftz
        run: make -C $GITHUB_WORKSPACE/NGSTrefftz/make
      - name: test NGSTrefftz
        run: env CTEST_OUTPUT_ON_FAILURE=1 make -C $GITHUB_WORKSPACE/NGSTrefftz/make test
      - name: install NGSTrefftz
        run: make -C $GITHUB_WORKSPACE/NGSTrefftz/make install  
      #- name: Debugging with tmate
        #if: ${{ failure() }}
        #uses: mxschmitt/action-tmate@v3

  pypi:
    needs: [maketest]
    runs-on: ubuntu-latest
    container:
      #image: quay.io/pypa/manylinux2014_x86_64:latest
      image: sameli/manylinux2014_x86_64_cuda_11
    if: github.event_name == 'release' && github.event.action == 'created' #startsWith(github.ref, 'refs/tags/v') # && github.event_name == 'push' 
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'True'
          path: 'NGSTrefftz'
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo
      - name: build pip
        run: cd NGSTrefftz/.github/workflows && sh build_pip.sh
      - name: Publish source distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: NGSTrefftz/wheelhouse/
          #repository_url: https://test.pypi.org/legacy/

  pypi-src:
    needs: [maketest]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'True'
          fetch-depth: 0
      - name: install pkgs
        run: |
             sudo apt-get update && DEBIAN_FRONTEND="noninteractive" sudo apt-get -y install vim python3 python3-pip python3-distutils python3-tk libpython3-dev libxmu-dev tk-dev tcl-dev cmake git g++ libglu1-mesa-dev libblas-dev liblapack-dev
      - name: Update pip and Install setuptools
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -U pytest-check numpy wheel scikit-build mkl==2022.* mkl-devel==2022.* setuptools
          python3 -m pip install ngsolve --pre
      - name: Package ngstrefftz sources for PyPI
        run: python3 setup.py sdist
      - name: pip install ngstrefftz
        run: pip install dist/*
      - name: Publish source distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: github.event_name == 'release' && github.event.action == 'created' #startsWith(github.ref, 'refs/tags/v') # && github.event_name == 'push' 
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker:
    needs: [maketest,pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: paulstdocker/ngstrefftz
          # generate Docker tags based on the following events/attributes
          tags: type=semver,pattern={{version}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ".github/workflows/Dockerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          #labels: ${{ steps.meta.outputs.labels }}

  docs:
    needs: [maketest,pypi]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          submodules: 'True'
          path: 'NGSTrefftz'
      - name: install pkgs
        run: sudo apt-get update && DEBIAN_FRONTEND="noninteractive" sudo apt-get -y install libxmu-dev tk-dev tcl-dev git libglu1-mesa-dev libblas-dev liblapack-dev python3 python3-pip python3-distutils python3-tk libpython3-dev python3-testresources npm nodejs pandoc -y
      #- name: pip pkgs
        #run: python3 -m pip list
      - name: set path
        run: echo "NETGENDIR=/usr/bin/" >> $GITHUB_ENV
      - run: pip install --user -r $GITHUB_WORKSPACE/NGSTrefftz/docs/requirements.txt
      - name: webgui
        run: |
             jupyter nbextension install --user --py widgetsnbextension
             jupyter nbextension enable --user --py widgetsnbextension
             jupyter nbextension install --user --py webgui_jupyter_widgets
             jupyter nbextension enable --user --py webgui_jupyter_widgets            
      #- run: python3 -c "import sys; print(sys.path)"
      #- name: cmake NGSTrefftz
        #run: |
             #cmake -B $GITHUB_WORKSPACE/NGSTrefftz/make -S $GITHUB_WORKSPACE/NGSTrefftz/src/
             #make -C $GITHUB_WORKSPACE/NGSTrefftz/make
             #sudo make -C $GITHUB_WORKSPACE/NGSTrefftz/make install  
             #python3 -c "import sys; print(sys.path)"
             #python3 -c "import ngstrefftz"
             #ln -s /usr/lib/python3/dist-packages/ngsolve /opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/
             #ln -s /usr/lib/python3/dist-packages/ngstrefftz /opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/
             #ln -s /usr/lib/python3/dist-packages/ngstents /opt/hostedtoolcache/Python/3.10.2/x64/lib/python3.10/site-packages/
      - name: jupyter stuff
        run: |
             pip install jupyter_contrib_nbextensions 
             #pip install jupyter_nbextensions_configurator 
             jupyter contrib nbextension install --user
             jupyter nbextension install --user --py widgetsnbextension
             jupyter nbextension enable --user --py widgetsnbextension
      - name: build tentswebgui
        run: |
             cd $GITHUB_WORKSPACE/NGSTrefftz/external_dependencies/ngstents/tentswebgui/ && bash build.sh
      - name: install tentswebgui
        run: |
             cd $GITHUB_WORKSPACE/NGSTrefftz/external_dependencies/ngstents/tentswebgui/ && pip install --user .
      - name: jupyter tentswebgui
        run: |
             jupyter nbextension install --user --py tentswebgui
             jupyter nbextension enable --user --py tentswebgui
      - name: Build and Commit
        uses: sphinx-notes/pages@v2
        with:
          repository_path: 'NGSTrefftz'
          #requirements_path: ./docs/requirements.txt
      - name: Push changes
        uses: ad-m/github-push-action@master
        if: github.event_name == 'release' && github.event.action == 'created'
        with:
          directory: 'NGSTrefftz'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
      - run: tree -d .
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: gh-page
          path: 'NGSTrefftz/'
      - name: Debugging 
        if: ${{ failure() }}
        run: cat /tmp/sphinx*

  paper:
    runs-on: ubuntu-latest
    name: Paper Draft
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build draft PDF
        uses: openjournals/openjournals-draft-action@master
        with:
          journal: joss
          paper-path: docs/paper/paper.md
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: joss_paper
          path: docs/paper/paper.pdf
